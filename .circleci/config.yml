# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

commands:

  install-base-dependencies:
    description: Install dependencies for our app
    steps:
      - run:
          name: Install dependencies
          command: |
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint

  install-aws-cli-dependencies:
    description: Install dependencies for aws-cli docker and kubernetes
    steps:
      - run:
          name: Install dependencies
          command: |
            yum install -y tar gzip
            echo -e "[kubernetes]\nname=Kubernetes\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\nexclude=kubelet kubeadm kubectl\n" >> /etc/yum.repos.d/kubernetes.repo
            yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
            yum install -y yum-utils
            yum-config-manager \
              --add-repo \
              https://download.docker.com/linux/centos/docker-ce.repo
            yum-config-manager --save --setopt=docker-ce-stable.skip_if_unavailable=true
            yum install docker-ce docker-ce-cli containerd.io

  install-node-dependencies:
    description: Install dependencies we use on node docker
    steps:
      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install lsb-core
            sudo apt install python3 python3-pip curl
            pip3 install --upgrade pip
            pip3 install --no-cache-dir awscli
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt update
            sudo apt install docker-ce docker-ce-cli containerd.io

jobs:

  build:
    docker:
      - image: ewkoch3/base:test
    working_directory: ~/repo
    steps:
      - checkout
      - install-base-dependencies
      - run:
          name: run lint
          command: |
            pip3 install pylint
            make lint
  
  test:
    docker:
      - image: ewkoch3/base:test
    working_directory: ~/repo
    steps:
      - checkout
      - install-base-dependencies
      - run:
          name: run tests
          command: |
            pip3 install pytest pytest-mock
            make test
            
  analyze:
    docker:
      - image: ewkoch3/base:test
    working_directory: ~/repo
    steps:
      - checkout
      - install-base-dependencies
      - run:
          name: run security scan
          command: |
            pip3 install bandit
            make scan

  deploy:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/repo
    steps:
      - checkout
      - install-node-dependencies
      - run:
          name: Upload container to Dockerhub
          command: |
            export tag="cn_news_clusters"
            export dockerpath="ewkoch3/base"
            docker build . --tag=$tag
            docker login --username=$DOCKER_LOGIN --password=$DOCKER_PWD
            docker tag $tag $dockerpath:$tag
            docker push "$dockerpath:$tag"
      - run:
          name: Deploy Docker Container to Kubernetes
          command: |
            export cluster_name="MyEKSCluster"
            export aws_region="us-east-1"
            export username="ewkoch3"
            export repo_name="base"
            export tag="cn_news_clusters"
            export dockerpath="$username/$repo_name:$tag"
            export name="clustering"
            aws eks update-kubeconfig --region $aws_region --name $cluster_name
            kubectl get svc
            kubectl get pods

workflows:
  default:
    jobs:
      - build
      - test:
          requires: [build]
      - analyze:
          requires: [build]
      - deploy:
          requires: [test, analyze]
          filters:
            branches:
              only: ["main"]
